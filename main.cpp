#include "mainwindow.h"

#include <QApplication>

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();
    return a.exec();
}

/*
Данные, которые можно считывать каждую итерацию фронта для сортировки требований по важности:
- (V) количество последователей / кол-во оставшихся требований
- (V) кол-во последователей / кол-во требований всего
- (?) важность последователей (использовать такую же сортировку, но с ограничениями чтобы избежать лютого O(2^n))
- (V) критическое время требования / максимальное критическое время всех требований
- (Х) пересчитывать критическое время требования во время выполнения, а не только в начале
- (V) время от начала выполнения до текущего момента / время всего на выполнение этого требования
- (V) средняя загруженность во время выполнения
- (V) максимальная загруженность при выполнении
- (?) сколько процентов времени занимает выполнение требования

Данные, которые можно использовать для калибровки, но которые скорее всего будут одинаковые для конкурирующих требований:
- (X) сколько станков доступно(без учета плана) в среднем для всех групп работ / (  )
- (X) сколько процентов станков в среднем доступно с учетом плана
- (X) количество последователей / макс. кол-во последователей для такого количества работ

- (?)количество станков способных выполнить требование и их текущая занятость
- (?)сколько процентов времени осталось до того, как станок будет "нерабочим" по плану
- (?)сколько процентов требований ждут поступления, ждут обработки станками, выполняются и уже выполнены
- (?)статистические характеристики требований: среднее значение, дисперсия, максимальное и минимальное значения
- (?)отношения среднего и максимального времени выполнения требований к среднему и максимальному времени рабочего состояния в графике работы станков
*/
